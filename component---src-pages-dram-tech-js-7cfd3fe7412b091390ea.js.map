{"version":3,"file":"component---src-pages-dram-tech-js-7cfd3fe7412b091390ea.js","mappings":"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","sources":["webpack://styled-gatsby-starter/./src/containers/TechRoadmap.js","webpack://styled-gatsby-starter/./src/hooks/useYearControl.js","webpack://styled-gatsby-starter/./src/pages/dram/tech.js","webpack://styled-gatsby-starter/./node_modules/lodash/mapValues.js"],"sourcesContent":["import ReactDOM from 'react-dom'\nimport React, { createRef, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { Link as GatsbyLink } from 'gatsby'\nimport styled from 'styled-components'\nimport range from 'lodash/range'\nimport mapValues from 'lodash/mapValues'\nimport Measure from 'react-measure'\n\nimport SheetLoader from './SheetLoader'\nimport Container from 'components/Container'\nimport useTableHeader from 'hooks/useTableHeader'\nimport useYearControl from 'hooks/useYearControl'\nimport Text from 'components/Text'\nimport Box from 'components/Box'\nimport Link from 'components/Link'\nimport PageSimulator from './PageSimulator'\nimport DramTimeline from './DramTimeline'\nimport parseDate from 'utils/parseDate'\nimport Pagination from 'components/Pagination'\nimport Flex from 'components/Flex'\nimport NoteBox from './NoteBox'\nimport PageTitle from './PageTitle'\n\nconst colors = {\n  dram: ['#72afc7', '#234b68'],\n  flash: ['#00af9c', '#0b6660'],\n}\n\nconst StyledTable = styled.table`\nth, td {\n  border: 3px solid #fff;\n  line-height: 2.5;\n}\n`\n\nconst quarters = range(4).map(q => `Q${q + 1}`)\nconst borderRightWidth = 12\nconst barWidth = 50\n\nconst FabRow = ({ fab, data, years, color, timelineRef, scale, boundBox }) => {\n  const [timelinePoses, setTimelinePoses] = useState([])\n  const lineRefs = useMemo(() => data.map(() => [\n    createRef(),\n    createRef(),\n  ]), [data])\n\n  useEffect(() => {\n    setTimelinePoses(lineRefs.map(([start, end]) => {\n      const startPos = start.current?.getBoundingClientRect()\n      const endPos = end.current?.getBoundingClientRect()\n      if (!endPos) return {}\n      const height = endPos.bottom - startPos.top\n      return mapValues({\n        left: startPos.left - boundBox.left,\n        width: endPos.right - startPos.left,\n        top: startPos.top + height / 2 / 2 - boundBox.top,\n        height: height / 2,\n      }, v => v / scale)\n    }))\n  }, [lineRefs, boundBox])\n\n  return (\n    <>\n      <tr>\n        <Box\n          as=\"td\"\n          whiteSpace=\"pre-wrap\"\n          bg=\"#cacaca\"\n          textAlign=\"center\"\n          style={{ borderRightWidth }}\n          color=\"#c63b38\"\n          fontSize=\"27.5px\"\n          fontWeight=\"bold\"\n        >{fab}</Box>\n        {range(years.length * 4).map((_, q, { length }) => {\n          const isLast = q === length - 1\n          return (\n            <td\n              key={q}\n              style={{ background: 'linear-gradient(0deg, rgba(227,227,227,0.85), rgba(238,238,238,0.3))' }}\n            >\n              {data.map((row, i) => {\n                let ref\n                if (q === 0) ref = lineRefs[i][0]\n                if (isLast) ref = lineRefs[i][1]\n                return <Box key={i} height={barWidth * 2} mt={i === 0 && (barWidth / 2)} mb={i === data.length - 1 && (barWidth / 2)} ref={ref} />\n              })}\n            </td>\n          )\n        })}\n      </tr>\n      {timelineRef?.current && ReactDOM.createPortal((\n        <>\n          {data.map((d, i) => (\n            <Box key={i} position=\"absolute\" style={timelinePoses[i]}>\n              <DramTimeline\n                data={d.timeline}\n                colors={[color]}\n                startQuarter={1}\n                startYear={years[0]}\n                yearSpan={years.length}\n                thickness={barWidth}\n              />\n              <Box\n                textAlign=\"right\"\n                fontSize=\"27.5px\"\n                color=\"white\"\n                position=\"absolute\"\n                top=\"50%\"\n                right=\"1.5em\"\n                transform=\"translateY(-50%)\"\n                fontWeight=\"bold\"\n              >\n                {d.name}\n              </Box>\n            </Box>\n          ))}\n        </>\n      ), timelineRef.current)}\n    </>\n  )\n}\n\nconst TechTable = ({ data, headerRow, startYear, name, scale }) => {\n  const [boundBox, setBoundBox] = useState({})\n  const years = useMemo(() => range(3), [])\n  const timelineParser = useCallback((d) => {\n    const tech = headerRow.find(h => /Technology/i.test(h.Header))?.accessor(d) ?? ''\n    const density = headerRow.find(h => /density/i.test(h.Header))?.accessor(d) ?? ''\n    const start = headerRow.find(h => /Start/i.test(h.Header))?.accessor(d) ?? ''\n    const end = headerRow.find(h => /End/i.test(h.Header))?.accessor(d) ?? ''\n    return {\n      name: `${tech} ${density}`,\n      timeline: [[parseDate(start), parseDate(end, 1)]],\n    }\n  }, [headerRow])\n  const groupByFab = useMemo(() => {\n    const fabAccesor = headerRow.find(h => /fab/i.test(h.Header))?.accessor\n    if (!fabAccesor) return []\n    return data.reduce((all, row) => {\n      const fab = fabAccesor(row)\n      let l = all.length\n      if (fab) {\n        l = all.push({ fab, data: [] })\n      }\n      all[l - 1]?.data.push(timelineParser(row))\n      return all\n    }, [])\n  }, [data, headerRow, timelineParser])\n\n  const timelineRefs = useMemo(() => groupByFab.map(() => createRef()), [groupByFab])\n  return (\n    <Box>\n      <PageTitle>\n        {data[0]?.[0]}\n      </PageTitle>\n      <Measure\n        bounds\n        onResize={contentRect => {\n          setBoundBox(contentRect.bounds)\n        }}\n      >\n        {({ measureRef }) => (\n          <Box position=\"absolute\" left=\"170px\" top=\"162px\" right=\"183px\" ref={measureRef}>\n            <StyledTable>\n              <thead>\n                <tr>\n                  <Box as=\"th\" fontWeight=\"900\" bg=\"#efefef\" rowSpan={2} width=\"222px\" style={{ borderRightWidth }} />\n                  {years.map(y => (\n                    <Box\n                      key={y}\n                      color=\"white\"\n                      as=\"th\"\n                      bg=\"#c63b38\"\n                      colSpan={4}\n                      fontSize=\"26px\"\n                      fontWeight=\"700\"\n                    >{startYear + y}</Box>\n                  ))}\n                </tr>\n                <tr>\n                  {years.reduce((all, y) => all.concat(quarters.map(q => (\n                    <Box\n                      as=\"th\"\n                      bg=\"#cacaca\"\n                      key={q + y}\n                      width=\"112px\"\n                      fontSize=\"24px\"\n                    >{q}</Box>\n                  ))), [])}\n                </tr>\n              </thead>\n              <tbody>\n                {groupByFab.map(({ fab, data: rowData }, f) => (\n                  <FabRow\n                    key={fab}\n                    data={rowData}\n                    fab={fab}\n                    years={years.map(y => y + startYear)}\n                    timelineRef={timelineRefs[f]}\n                    color={colors[name][f]}\n                    scale={scale}\n                    boundBox={boundBox}\n                  />\n                ))}\n              </tbody>\n            </StyledTable>\n            <Flex.HStack mt=\"1em\" justifyContent=\"flex-end\" alignItems=\"center\" spacing=\"1.25em\">\n              <NoteBox bg=\"#9fa0a0\">NOTE</NoteBox>\n              <Box>Roapmaps are subject to change.</Box>\n            </Flex.HStack>\n            {groupByFab.map(({ fab }, f) => <Box.FullAbsolute key={fab} ref={timelineRefs[f]} />)}\n          </Box>\n        )}\n      </Measure>\n    </Box>\n  )\n}\n\nconst SheetData = ({ data, name }) => {\n  const { startYear, yearControl } = useYearControl()\n  // const [selectedRow, setSelectedRow] = useState({})\n  const [page, setPage] = useState(0)\n\n  const headerRow = useTableHeader(data, 0)\n  const tableData = useMemo(() => data ? data.slice(1) : [], [data])\n  const pages = useMemo(() => {\n    return tableData.reduce((all, row) => {\n      let i = all.length - 1\n      if (row[0]) {\n        i = all.push([]) - 1\n      }\n      all[i]?.push(row)\n      return all\n    }, [])\n  }, [tableData])\n  const notFab = useMemo(() => headerRow.every((h => !/fab/i.test(h.Header))), [headerRow])\n\n  return (\n    <>\n      {yearControl}\n      {pages && pages[page] && (\n        notFab ? (\n          <Text fontWeight=\"bold\" my=\"1em\">Invalid Sheet Format.</Text>\n        ) : (\n          <>\n            <Pagination\n              pageCount={pages.length}\n              pageRangeDisplayed={5}\n              marginPagesDisplayed={2}\n              onPageChange={({ selected }) => setPage(selected)}\n            />\n            <PageSimulator name={`${name}-tech-roadmap`}>\n              <TechTable\n                data={pages[page]}\n                headerRow={headerRow}\n                startYear={startYear}\n                name={name}\n              />\n            </PageSimulator>\n          </>\n        )\n      )}\n    </>\n  )\n}\n\nconst TechRoadmap = ({ name }) => {\n  return (\n    <Container>\n      <Link as={GatsbyLink} to=\"/\">\n        {`< Home`}\n      </Link>\n      <SheetLoader name={name}>\n        <SheetData />\n      </SheetLoader>\n    </Container>\n  )\n}\n\nexport default TechRoadmap\n","import React, { useMemo, useState } from 'react'\nimport Flex from 'components/Flex'\nimport Text from 'components/Text'\nimport Box from 'components/Box'\n\nconst useYearControl = () => {\n  const [startYear, setStartYear] = useState(() => new Date().getFullYear())\n  const yearControl = useMemo(() => (\n    <Flex as=\"label\" my=\"1em\" alignItems=\"center\">\n      <Text mr=\"0.5em\">起始年分</Text>\n      <Box width=\"12em\">\n        <input\n          style={{ lineHeight: 2 }}\n          type=\"number\"\n          value={startYear}\n          onChange={e => setStartYear(+e.target.value)}\n        />\n      </Box>\n    </Flex>\n  ), [startYear])\n  return {\n    startYear,\n    yearControl,\n  }\n}\n\nexport default useYearControl\n","import React from 'react'\nimport withAuthChecker from 'containers/withAuthChecker'\nimport Page from 'containers/TechRoadmap'\n\nconst TechPage = props => <Page name=\"dram\" {...props} />\n\nexport default withAuthChecker(TechPage)\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"names":["colors","dram","flash","StyledTable","styled","quarters","range","map","q","FabRow","fab","data","years","color","timelineRef","scale","boundBox","useState","timelinePoses","setTimelinePoses","lineRefs","useMemo","createRef","useEffect","start","end","startPos","current","getBoundingClientRect","endPos","height","bottom","top","mapValues","left","width","right","v","as","whiteSpace","bg","textAlign","style","borderRightWidth","fontSize","fontWeight","length","_","isLast","key","background","row","i","ref","barWidth","mt","mb","ReactDOM","d","position","timeline","startQuarter","startYear","yearSpan","thickness","transform","name","TechTable","headerRow","setBoundBox","timelineParser","useCallback","tech","find","h","test","Header","accessor","density","parseDate","groupByFab","fabAccesor","reduce","all","l","push","timelineRefs","bounds","onResize","contentRect","measureRef","rowSpan","y","colSpan","concat","f","rowData","justifyContent","alignItems","spacing","SheetData","useYearControl","yearControl","page","setPage","useTableHeader","tableData","slice","pages","notFab","every","my","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","GatsbyLink","to","Date","getFullYear","setStartYear","mr","lineHeight","type","value","onChange","e","target","withAuthChecker","props","baseAssignValue","baseForOwn","baseIteratee","module","exports","object","iteratee","result"],"sourceRoot":""}