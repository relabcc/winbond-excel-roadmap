{"version":3,"file":"component---src-pages-dram-tech-js-a3b2979bcd2a480c746f.js","mappings":"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","sources":["webpack://styled-gatsby-starter/./src/hooks/useQuarterControl.js","webpack://styled-gatsby-starter/./src/containers/TechRoadmap.js","webpack://styled-gatsby-starter/./src/pages/dram/tech.js","webpack://styled-gatsby-starter/./node_modules/lodash/mapValues.js"],"sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { getQuarter } from 'date-fns'\n\nimport Flex from 'components/Flex'\nimport Text from 'components/Text'\nimport Box from 'components/Box'\n\nconst useQuarterControl = () => {\n  const [startQuarter, setStartQuarter] = useState(() => getQuarter(new Date()))\n  const quarterControl = useMemo(() => (\n    <Flex as=\"label\" my=\"1em\" alignItems=\"center\">\n      <Text mr=\"0.5em\">起始季度</Text>\n      <Box width=\"6em\">\n        <Box\n          as=\"select\"\n          p=\"0.5em\"\n          onChange={e => setStartQuarter(+e.target.value)}\n          value={startQuarter}\n        >\n          <option value=\"1\">Q1</option>\n          <option value=\"2\">Q2</option>\n          <option value=\"3\">Q3</option>\n          <option value=\"4\">Q4</option>\n        </Box>\n        {/* <Box\n          as=\"input\"\n          maxWidth=\"100%\"\n          type=\"number\"\n          lineHeight=\"2\"\n          value={startQuarter}\n          max={4}\n          min={1}\n          onChange={e => setStartQuarter(+e.target.value)}\n        /> */}\n      </Box>\n    </Flex>\n  ), [startQuarter])\n  return {\n    startQuarter,\n    quarterControl,\n  }\n}\n\nexport default useQuarterControl\n","import ReactDOM from 'react-dom'\r\nimport React, { createRef, useCallback, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Link as GatsbyLink } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport range from 'lodash/range'\r\nimport mapValues from 'lodash/mapValues'\r\nimport Measure from 'react-measure'\r\n\r\nimport SheetLoader from './SheetLoader'\r\nimport Container from 'components/Container'\r\nimport useTableHeader from 'hooks/useTableHeader'\r\nimport useYearControl from 'hooks/useYearControl'\r\nimport useQuarterControl from 'hooks/useQuarterControl'\r\nimport Text from 'components/Text'\r\nimport Box from 'components/Box'\r\nimport Link from 'components/Link'\r\nimport PageSimulator from './PageSimulator'\r\nimport DramTimeline from './DramTimeline'\r\nimport parseDate from 'utils/parseDate'\r\nimport Pagination from 'components/Pagination'\r\nimport Flex from 'components/Flex'\r\nimport NoteBox from './NoteBox'\r\nimport PageTitle from './PageTitle'\r\n\r\nconst colors = {\r\n  dram: ['#72afc7', '#234b68'],\r\n  flash: ['#00af9c', '#0b6660'],\r\n}\r\n\r\nconst typeColor = {\r\n  NOR: colors.flash[0],\r\n  NAND: colors.flash[1],\r\n}\r\n\r\nconst StyledTable = styled.table`\r\nbackground: linear-gradient(0deg, rgba(227,227,227,0.85), rgba(238,238,238,0.3));\r\nheight: 100%;\r\nth, td {\r\n  border: 3px solid #fff;\r\n  line-height: 2.5;\r\n}\r\n`\r\n\r\nconst borderRightWidth = 12\r\nconst barWidth = 50\r\n\r\nconst FabRow = ({\r\n  fab,\r\n  data,\r\n  startYear,\r\n  yearSpan,\r\n  color,\r\n  timelineRef,\r\n  scale,\r\n  boundBox,\r\n  startQuarter,\r\n  count,\r\n}) => {\r\n  const barHeight = 300 / count\r\n  const [timelinePoses, setTimelinePoses] = useState([])\r\n  const lineRefs = useMemo(() => data.map(() => [\r\n    createRef(),\r\n    createRef(),\r\n  ]), [data])\r\n\r\n  useEffect(() => {\r\n    setTimelinePoses(lineRefs.map(([start, end]) => {\r\n      const startPos = start.current?.getBoundingClientRect()\r\n      const endPos = end.current?.getBoundingClientRect()\r\n      if (!endPos) return {}\r\n      const height = endPos.bottom - startPos.top\r\n      return mapValues({\r\n        left: startPos.left - boundBox.left,\r\n        width: endPos.right - startPos.left,\r\n        top: startPos.top + height / 2 / 2 - boundBox.top + window.scrollY,\r\n        height: height / 2,\r\n      }, v => v / scale)\r\n    }))\r\n  }, [lineRefs, boundBox, yearSpan])\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <Box\r\n          as=\"td\"\r\n          whiteSpace=\"pre-wrap\"\r\n          bg=\"#cacaca\"\r\n          textAlign=\"center\"\r\n          style={{ borderRightWidth }}\r\n          color=\"#c63b38\"\r\n          fontSize=\"27.5px\"\r\n          fontWeight=\"bold\"\r\n        >{fab}</Box>\r\n        {range(yearSpan * (yearSpan > 3 ? 2 : 4)).map((_, q, { length }) => {\r\n          const isLast = q === length - 1\r\n          return (\r\n            <td\r\n              key={q}\r\n            >\r\n              {data.map((row, i) => {\r\n                let ref\r\n                if (q === 0) ref = lineRefs[i][0]\r\n                if (isLast) ref = lineRefs[i][1]\r\n                return (\r\n                  <Box\r\n                    key={i}\r\n                    height={barHeight * 2}\r\n                    mt={i === 0 && (barHeight / 2)}\r\n                    mb={i === data.length - 1 && (barHeight / 2)}\r\n                    ref={ref}\r\n                  />\r\n                )\r\n              })}\r\n            </td>\r\n          )\r\n        })}\r\n      </tr>\r\n      {timelineRef?.current && ReactDOM.createPortal((\r\n        <>\r\n          {data.map((d, i) => (\r\n            <Box key={i} position=\"absolute\" style={timelinePoses[i]}>\r\n              <DramTimeline\r\n                data={d.timeline}\r\n                colors={[d.color || color]}\r\n                startQuarter={startQuarter}\r\n                startYear={startYear}\r\n                yearSpan={yearSpan}\r\n                thickness={barWidth}\r\n              >\r\n                {d.name}\r\n              </DramTimeline>\r\n              {/* <Box\r\n                textAlign=\"right\"\r\n                fontSize=\"27.5px\"\r\n                color=\"white\"\r\n                position=\"absolute\"\r\n                top=\"50%\"\r\n                right=\"1.5em\"\r\n                transform=\"translateY(-50%)\"\r\n                fontWeight=\"bold\"\r\n                whiteSpace=\"nowrap\"\r\n              >\r\n                {d.name}\r\n              </Box> */}\r\n            </Box>\r\n          ))}\r\n        </>\r\n      ), timelineRef.current)}\r\n    </>\r\n  )\r\n}\r\n\r\nconst TechTable = ({ data, headerRow, startYear, startQuarter, name, scale, yearSpan = 3 }) => {\r\n  const [boundBox, setBoundBox] = useState({})\r\n  const years = useMemo(() => {\r\n    const isPerfect = startQuarter === 1 || yearSpan > 3\r\n    const makeQuarter = q => `${yearSpan > 3 ? 'H' : 'Q'}${q + 1}`\r\n    return range(yearSpan + (isPerfect ? 0 : 1)).map(y => {\r\n      if (isPerfect) return range(yearSpan > 3 ? 2 : 4).map(makeQuarter)\r\n      if (y === 0) return range(startQuarter - 1, 4).map(makeQuarter)\r\n      if (y === yearSpan) return range(startQuarter - 1).map(makeQuarter)\r\n      return range(4).map(makeQuarter)\r\n    })\r\n  }, [yearSpan, startQuarter])\r\n  const timelineParser = useCallback((d) => {\r\n    const tech = headerRow.find(h => /Technology/i.test(h.Header))?.accessor(d) ?? ''\r\n    const density = headerRow.find(h => /density/i.test(h.Header))?.accessor(d) ?? ''\r\n    const start = headerRow.find(h => /Start/i.test(h.Header))?.accessor(d) ?? ''\r\n    const end = headerRow.find(h => /End/i.test(h.Header))?.accessor(d) ?? ''\r\n    const type = name === 'flash' ? headerRow.find(h => /Type/i.test(h.Header))?.accessor(d) ?? '' : ''\r\n    return {\r\n      name: `${type} ${tech} ${density}`,\r\n      timeline: [[parseDate(start), parseDate(end, 1)]],\r\n      color: typeColor[type],\r\n    }\r\n  }, [headerRow, name])\r\n  const groupByFab = useMemo(() => {\r\n    const fabAccesor = headerRow.find(h => /fab/i.test(h.Header))?.accessor\r\n    if (!fabAccesor) return []\r\n    return data.reduce((all, row) => {\r\n      const fab = fabAccesor(row)\r\n      let l = all.length\r\n      if (fab) {\r\n        l = all.push({ fab, data: [] })\r\n      }\r\n      const parsed = timelineParser(row)\r\n      const dateStart = startYear + (startQuarter - 1) / 4\r\n      const dateEnd = startYear + yearSpan + (startQuarter - 1) / 4\r\n      const inRange = (d, isEnd) => {\r\n        if (!d) return true\r\n        if (typeof d == 'string') return false\r\n        const y = d.year + d.month / 12\r\n        return isEnd ? y >= dateStart : y < dateEnd\r\n      }\r\n      if (parsed.timeline[0].every(inRange)) {\r\n        all[l - 1]?.data.push(parsed)\r\n      }\r\n      return all\r\n    }, [])\r\n  }, [data, headerRow, startQuarter, startYear, timelineParser, yearSpan])\r\n  const timelineRefs = useMemo(() => groupByFab.map(() => createRef()), [groupByFab])\r\n  return (\r\n    <Box>\r\n      <PageTitle>\r\n        {data[0]?.[0]}\r\n      </PageTitle>\r\n      <Measure\r\n        bounds\r\n        onResize={contentRect => {\r\n          setBoundBox(contentRect.bounds)\r\n        }}\r\n      >\r\n        {({ measureRef }) => (\r\n          <Box\r\n            position=\"absolute\"\r\n            left=\"170px\"\r\n            top=\"162px\"\r\n            right=\"183px\"\r\n            bottom=\"130px\"\r\n            ref={measureRef}\r\n          >\r\n            <StyledTable>\r\n              <thead>\r\n                <tr>\r\n                  <Box as=\"th\" fontWeight=\"900\" bg=\"#efefef\" rowSpan={2} width=\"222px\" style={{ borderRightWidth }} />\r\n                  {years.map((span, y) => (\r\n                    <Box\r\n                      key={y}\r\n                      color=\"white\"\r\n                      as=\"th\"\r\n                      bg=\"#c63b38\"\r\n                      colSpan={span.length}\r\n                      fontSize=\"26px\"\r\n                      fontWeight=\"700\"\r\n                    >{startYear + y}</Box>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  {years.reduce((all, quarters, y) => all.concat(quarters.map(q => (\r\n                    <Box\r\n                      as=\"th\"\r\n                      bg=\"#cacaca\"\r\n                      key={q + y}\r\n                      width=\"112px\"\r\n                      fontSize=\"24px\"\r\n                    >{q}</Box>\r\n                  ))), [])}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupByFab.map(({ fab, data: rowData }, f) => (\r\n                  <FabRow\r\n                    key={fab}\r\n                    data={rowData}\r\n                    fab={fab}\r\n                    startYear={startYear}\r\n                    yearSpan={yearSpan}\r\n                    startQuarter={yearSpan > 3 ? 1 : startQuarter}\r\n                    timelineRef={timelineRefs[f]}\r\n                    color={colors[name][f]}\r\n                    scale={scale}\r\n                    boundBox={boundBox}\r\n                    count={data.length}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </StyledTable>\r\n            <Flex.HStack mt=\"1em\" justifyContent=\"flex-end\" alignItems=\"center\" spacing=\"1.25em\">\r\n              <NoteBox bg=\"#9fa0a0\">NOTE</NoteBox>\r\n              <Box>Roadmaps are subject to change.</Box>\r\n            </Flex.HStack>\r\n            {groupByFab.map(({ fab }, f) => <Box.FullAbsolute key={fab} ref={timelineRefs[f]} />)}\r\n          </Box>\r\n        )}\r\n      </Measure>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst RadioInput = ({ name, value, onChange, children, checked }) => (\r\n  <Box as=\"label\">\r\n    <input type=\"radio\" name={name} value={value} onChange={onChange} checked={checked} />\r\n    <Box as=\"span\" ml=\"0.5em\">{children}</Box>\r\n  </Box>\r\n)\r\n\r\nconst yearSpanValues = [\r\n  { label: '3 Years', value: 3 },\r\n  { label: '7 Years', value: 7 },\r\n]\r\n\r\nconst SheetData = ({ data, name }) => {\r\n  const { startYear, yearControl } = useYearControl()\r\n  const { startQuarter, quarterControl } = useQuarterControl()\r\n  // const [selectedRow, setSelectedRow] = useState({})\r\n  const [page, setPage] = useState(0)\r\n  const [yearSpan, setYearSpan] = useState(3)\r\n\r\n  const headerRow = useTableHeader(data, 0)\r\n  const tableData = useMemo(() => data ? data.slice(1) : [], [data])\r\n  const pages = useMemo(() => {\r\n    return tableData.reduce((all, row) => {\r\n      let i = all.length - 1\r\n      if (row[0]) {\r\n        i = all.push([]) - 1\r\n      }\r\n      all[i]?.push(row)\r\n      return all\r\n    }, [])\r\n  }, [tableData])\r\n  const notFab = useMemo(() => headerRow.every((h => !/fab/i.test(h.Header))), [headerRow])\r\n\r\n  return (\r\n    <>\r\n      <Flex.HStack alignItems=\"center\">\r\n        {yearControl}\r\n        {quarterControl}\r\n        <Flex.HStack spacing=\"1.5em\">\r\n          {yearSpanValues.map(({ value, label }) => (\r\n            <RadioInput\r\n              name=\"yearSpan\"\r\n              value={value}\r\n              onChange={() => setYearSpan(value)}\r\n              checked={yearSpan === value}\r\n              key={value}\r\n            >\r\n              {label}\r\n            </RadioInput>\r\n          ))}\r\n\r\n        </Flex.HStack>\r\n      </Flex.HStack>\r\n      {pages && pages[page] && (\r\n        notFab ? (\r\n          <Text fontWeight=\"bold\" my=\"1em\">Invalid Sheet Format.</Text>\r\n        ) : (\r\n          <>\r\n            <Pagination\r\n              pageCount={pages.length}\r\n              pageRangeDisplayed={5}\r\n              marginPagesDisplayed={2}\r\n              onPageChange={({ selected }) => setPage(selected)}\r\n            />\r\n            <PageSimulator noBg name={`${name}-tech-roadmap`} key={yearSpan}>\r\n              <TechTable\r\n                data={pages[page]}\r\n                headerRow={headerRow}\r\n                startYear={startYear}\r\n                startQuarter={startQuarter}\r\n                name={name}\r\n                yearSpan={yearSpan}\r\n              />\r\n            </PageSimulator>\r\n          </>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst TechRoadmap = ({ name }) => {\r\n  return (\r\n    <Container>\r\n      <Link as={GatsbyLink} to={`/${name}`}>\r\n        {`< Home`}\r\n      </Link>\r\n      <SheetLoader name={name}>\r\n        <SheetData />\r\n      </SheetLoader>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TechRoadmap\r\n","import React from 'react'\nimport withAuthChecker from 'containers/withAuthChecker'\nimport Page from 'containers/TechRoadmap'\n\nconst TechPage = props => <Page name=\"dram\" {...props} />\n\nexport default withAuthChecker(TechPage)\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"names":["useState","getQuarter","Date","startQuarter","setStartQuarter","quarterControl","useMemo","Flex","as","my","alignItems","Text","mr","Box","width","p","onChange","e","target","value","colors","dram","flash","typeColor","NOR","NAND","StyledTable","styled","FabRow","fab","data","startYear","yearSpan","color","timelineRef","scale","boundBox","barHeight","count","timelinePoses","setTimelinePoses","lineRefs","map","createRef","useEffect","start","end","startPos","current","getBoundingClientRect","endPos","height","bottom","top","mapValues","left","right","window","scrollY","v","whiteSpace","bg","textAlign","style","borderRightWidth","fontSize","fontWeight","range","_","q","length","isLast","key","row","i","ref","mt","mb","ReactDOM","d","position","DramTimeline","timeline","thickness","name","TechTable","headerRow","setBoundBox","years","isPerfect","makeQuarter","y","timelineParser","useCallback","tech","find","h","test","Header","accessor","density","type","parseDate","groupByFab","fabAccesor","reduce","all","l","push","parsed","dateStart","dateEnd","every","isEnd","year","month","timelineRefs","PageTitle","bounds","onResize","contentRect","measureRef","rowSpan","span","colSpan","quarters","concat","f","rowData","justifyContent","spacing","NoteBox","RadioInput","children","checked","ml","yearSpanValues","label","SheetData","useYearControl","yearControl","useQuarterControl","page","setPage","setYearSpan","useTableHeader","tableData","slice","pages","notFab","Pagination","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","PageSimulator","noBg","Container","Link","GatsbyLink","to","SheetLoader","withAuthChecker","props","baseAssignValue","baseForOwn","baseIteratee","module","exports","object","iteratee","result"],"sourceRoot":""}