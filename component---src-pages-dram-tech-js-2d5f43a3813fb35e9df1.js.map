{"version":3,"file":"component---src-pages-dram-tech-js-2d5f43a3813fb35e9df1.js","mappings":"0WAuBMA,EAAS,CACbC,KAAM,CAAC,UAAW,WAClBC,MAAO,CAAC,UAAW,YAGfC,EAAY,CAChBC,IAAKJ,EAAOE,MAAM,GAClBG,KAAML,EAAOE,MAAM,IAGfI,EAAcC,EAAAA,QAAAA,MAAAA,WAAH,oEAAGA,CAAH,mDAUXC,EAAS,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,IAAKC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7D,GAA0CC,EAAAA,EAAAA,UAAS,IAA5CC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,UAAQ,kBAAMV,EAAKW,KAAI,iBAAM,EAC5CC,EAAAA,EAAAA,cACAA,EAAAA,EAAAA,mBACE,CAACZ,IAiBL,OAfAa,EAAAA,EAAAA,YAAU,WACRL,EAAiBC,EAASE,KAAI,YAAmB,IAAD,IAAhBG,EAAgB,KAATC,EAAS,KACxCC,EAAQ,UAAGF,EAAMG,eAAT,aAAG,EAAeC,wBAC1BC,EAAM,UAAGJ,EAAIE,eAAP,aAAG,EAAaC,wBAC5B,IAAKC,EAAQ,MAAO,GACpB,IAAMC,EAASD,EAAOE,OAASL,EAASM,IACxC,OAAOC,IAAU,CACfC,KAAMR,EAASQ,KAAOnB,EAASmB,KAC/BC,MAAON,EAAOO,MAAQV,EAASQ,KAC/BF,IAAKN,EAASM,IAAMF,EAAS,EAAI,EAAIf,EAASiB,IAC9CF,OAAQA,EAAS,IAChB,SAAAO,GAAC,OAAIA,EAAIvB,WAEb,CAACK,EAAUJ,EAAUJ,EAAM2B,SAG5B,gCACE,0BACE,gBAAC,IAAD,CACEC,GAAG,KACHC,WAAW,WACXC,GAAG,UACHC,UAAU,SACVC,MAAO,CAAEC,iBAjCM,IAkCfhC,MAAM,UACNiC,SAAS,SACTC,WAAW,QACXrC,GACDsC,IAAMpC,EAAM2B,QAAU3B,EAAM2B,OAAS,EAAI,EAAI,IAAIjB,KAAI,SAAC2B,EAAGC,EAAJ,GAAuB,IAAdX,EAAa,EAAbA,OACvDY,EAASD,IAAMX,EAAS,EAC9B,OACE,sBACEa,IAAKF,EACLN,MAAO,CAAES,WAAY,yEAEpB1C,EAAKW,KAAI,SAACgC,EAAKC,GACd,IAAIC,EAGJ,OAFU,IAANN,IAASM,EAAMpC,EAASmC,GAAG,IAC3BJ,IAAQK,EAAMpC,EAASmC,GAAG,IACvB,gBAAC,IAAD,CAAKH,IAAKG,EAAGxB,OAAQ0B,IAAcC,GAAU,IAANH,GAAYE,GAAeE,GAAIJ,IAAM5C,EAAK4B,OAAS,GAAMkB,GAAeD,IAAKA,aAMpI1C,aAAA,EAAAA,EAAac,UAAWgC,EAAAA,aACvB,gCACGjD,EAAKW,KAAI,SAACuC,EAAGN,GAAJ,OACR,gBAAC,IAAD,CAAKH,IAAKG,EAAGO,SAAS,WAAWlB,MAAO1B,EAAcqC,IACpD,gBAAC,IAAD,CACE5C,KAAMkD,EAAEE,SACR9D,OAAQ,CAAC4D,EAAEhD,OAASA,GACpBmD,aAAc,EACdC,UAAWrD,EAAM,GACjBsD,SAAUtD,EAAM2B,OAChB4B,UAhEC,IAkEAN,EAAEO,WAkBVtD,EAAYc,WAKfyC,EAAY,SAAC,GAA+D,IAAD,EAA5D1D,EAA4D,EAA5DA,KAAM2D,EAAsD,EAAtDA,UAAWL,EAA2C,EAA3CA,UAAWG,EAAgC,EAAhCA,KAAMrD,EAA0B,EAA1BA,MAA0B,IAAnBmD,SAAAA,OAAmB,MAAR,EAAQ,EAC/E,GAAgCjD,EAAAA,EAAAA,UAAS,IAAlCD,EAAP,KAAiBuD,EAAjB,KACM3D,GAAQS,EAAAA,EAAAA,UAAQ,kBAAM2B,IAAMkB,KAAW,CAACA,IACxCM,GAAiBC,EAAAA,EAAAA,cAAY,SAACZ,GAAO,IAAD,oBAClCa,EAAI,oBAAGJ,EAAUK,MAAK,SAAAC,GAAC,MAAI,cAAcC,KAAKD,EAAEE,kBAA5C,aAAG,EAAmDC,SAASlB,UAA/D,QAAqE,GACzEmB,EAAO,oBAAGV,EAAUK,MAAK,SAAAC,GAAC,MAAI,WAAWC,KAAKD,EAAEE,kBAAzC,aAAG,EAAgDC,SAASlB,UAA5D,QAAkE,GACzEpC,EAAK,oBAAG6C,EAAUK,MAAK,SAAAC,GAAC,MAAI,SAASC,KAAKD,EAAEE,kBAAvC,aAAG,EAA8CC,SAASlB,UAA1D,QAAgE,GACrEnC,EAAG,oBAAG4C,EAAUK,MAAK,SAAAC,GAAC,MAAI,OAAOC,KAAKD,EAAEE,kBAArC,aAAG,EAA4CC,SAASlB,UAAxD,QAA8D,GACjEoB,EAAgB,UAATb,GAAA,oBAAmBE,EAAUK,MAAK,SAAAC,GAAC,MAAI,QAAQC,KAAKD,EAAEE,kBAAtD,aAAmB,EAA6CC,SAASlB,UAAzE,QAAoF,GACjG,MAAO,CACLO,KAASa,EAAL,IAAaP,EAAb,IAAqBM,EACzBjB,SAAU,CAAC,EAACmB,EAAAA,EAAAA,GAAUzD,IAAQyD,EAAAA,EAAAA,GAAUxD,EAAK,KAC7Cb,MAAOT,EAAU6E,MAElB,CAACX,EAAWF,IACTe,GAAa9D,EAAAA,EAAAA,UAAQ,WAAO,IAAD,EACzB+D,EAAU,UAAGd,EAAUK,MAAK,SAAAC,GAAC,MAAI,OAAOC,KAAKD,EAAEE,kBAArC,aAAG,EAA4CC,SAC/D,OAAKK,EACEzE,EAAK0E,QAAO,SAACC,EAAKhC,GAAS,IAAD,EACzB5C,EAAM0E,EAAW9B,GACnBiC,EAAID,EAAI/C,OAKZ,OAJI7B,IACF6E,EAAID,EAAIE,KAAK,CAAE9E,IAAAA,EAAKC,KAAM,MAE5B,UAAA2E,EAAIC,EAAI,UAAR,SAAY5E,KAAK6E,KAAKhB,EAAelB,IAC9BgC,IACN,IATqB,KAUvB,CAAC3E,EAAM2D,EAAWE,IACfiB,GAAWpE,EAAAA,EAAAA,UAAQ,kBAAM2B,IAAMkB,EAAW,EAAI,EAAI,GAAG5C,KAAI,SAAA4B,GAAC,OAAOgB,EAAW,EAAI,IAAM,MAAMhB,EAAI,QAAM,CAACgB,IAEvGwB,GAAerE,EAAAA,EAAAA,UAAQ,kBAAM8D,EAAW7D,KAAI,kBAAMC,EAAAA,EAAAA,kBAAc,CAAC4D,IACvE,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,eACGxE,EAAK,UADR,aACG,EAAU,IAEb,gBAAC,IAAD,CACEgF,QAAM,EACNC,SAAU,SAAAC,GACRtB,EAAYsB,EAAYF,WAGzB,gBAAGG,EAAH,EAAGA,WAAH,OACC,gBAAC,IAAD,CAAKhC,SAAS,WAAW3B,KAAK,QAAQF,IAAI,QAAQI,MAAM,QAAQmB,IAAKsC,GACnE,gBAACvF,EAAD,KACE,6BACE,0BACE,gBAAC,IAAD,CAAKiC,GAAG,KAAKO,WAAW,MAAML,GAAG,UAAUqD,QAAS,EAAG3D,MAAM,QAAQQ,MAAO,CAAEC,iBAzIvE,MA0INjC,EAAMU,KAAI,SAAA0E,GAAC,OACV,gBAAC,IAAD,CACE5C,IAAK4C,EACLnF,MAAM,QACN2B,GAAG,KACHE,GAAG,UACHuD,QAAS/B,EAAW,EAAI,EAAI,EAC5BpB,SAAS,OACTC,WAAW,OACXkB,EAAY+B,OAGlB,0BACGpF,EAAMyE,QAAO,SAACC,EAAKU,GAAN,OAAYV,EAAIY,OAAOT,EAASnE,KAAI,SAAA4B,GAAC,OACjD,gBAAC,IAAD,CACEV,GAAG,KACHE,GAAG,UACHU,IAAKF,EAAI8C,EACT5D,MAAM,QACNU,SAAS,QACTI,SACC,MAGT,6BACGiC,EAAW7D,KAAI,WAAyB6E,GAAzB,IAAGzF,EAAH,EAAGA,IAAW0F,EAAd,EAAQzF,KAAR,OACd,gBAACF,EAAD,CACE2C,IAAK1C,EACLC,KAAMyF,EACN1F,IAAKA,EACLE,MAAOA,EAAMU,KAAI,SAAA0E,GAAC,OAAIA,EAAI/B,KAC1BnD,YAAa4E,EAAaS,GAC1BtF,MAAOZ,EAAOmE,GAAM+B,GACpBpF,MAAOA,EACPC,SAAUA,SAKlB,gBAAC,WAAD,CAAa0C,GAAG,MAAM2C,eAAe,WAAWC,WAAW,SAASC,QAAQ,UAC1E,gBAAC,IAAD,CAAS7D,GAAG,WAAZ,QACA,gBAAC,IAAD,yCAEDyC,EAAW7D,KAAI,WAAU6E,GAAV,IAAGzF,EAAH,EAAGA,IAAH,OAAgB,gBAAC,iBAAD,CAAkB0C,IAAK1C,EAAK8C,IAAKkC,EAAaS,cAQpFK,EAAa,SAAC,GAAD,IAAGpC,EAAH,EAAGA,KAAMqC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,SAAUC,EAApC,EAAoCA,QAApC,OACjB,gBAAC,IAAD,CAAKpE,GAAG,SACN,yBAAOyC,KAAK,QAAQb,KAAMA,EAAMqC,MAAOA,EAAOC,SAAUA,EAAUE,QAASA,IAC3E,gBAAC,IAAD,CAAKpE,GAAG,OAAOqE,GAAG,SAASF,KAIzBG,EAAiB,CACrB,CAAEC,MAAO,UAAWN,MAAO,GAC3B,CAAEM,MAAO,UAAWN,MAAO,IAGvBO,EAAY,SAAC,GAAoB,IAAlBrG,EAAiB,EAAjBA,KAAMyD,EAAW,EAAXA,KACzB,GAAmC6C,EAAAA,EAAAA,KAA3BhD,EAAR,EAAQA,UAAWiD,EAAnB,EAAmBA,YAEnB,GAAwBjG,EAAAA,EAAAA,UAAS,GAA1BkG,EAAP,KAAaC,EAAb,KACA,GAAgCnG,EAAAA,EAAAA,UAAS,GAAlCiD,EAAP,KAAiBmD,EAAjB,KAEM/C,GAAYgD,EAAAA,EAAAA,GAAe3G,EAAM,GACjC4G,GAAYlG,EAAAA,EAAAA,UAAQ,kBAAMV,EAAOA,EAAK6G,MAAM,GAAK,KAAI,CAAC7G,IACtD8G,GAAQpG,EAAAA,EAAAA,UAAQ,WACpB,OAAOkG,EAAUlC,QAAO,SAACC,EAAKhC,GAAS,IAAD,EAChCC,EAAI+B,EAAI/C,OAAS,EAKrB,OAJIe,EAAI,KACNC,EAAI+B,EAAIE,KAAK,IAAM,GAErB,UAAAF,EAAI/B,UAAJ,SAAQiC,KAAKlC,GACNgC,IACN,MACF,CAACiC,IACEG,GAASrG,EAAAA,EAAAA,UAAQ,kBAAMiD,EAAUqD,OAAO,SAAA/C,GAAC,OAAK,OAAOC,KAAKD,EAAEE,aAAW,CAACR,IAE9E,OACE,gCACE,gBAAC,WAAD,CAAagC,WAAW,UACrBY,EACD,gBAAC,WAAD,CAAaX,QAAQ,UAClBO,EAAexF,KAAI,gBAAGmF,EAAH,EAAGA,MAAOM,EAAV,EAAUA,MAAV,OAClB,gBAACP,EAAD,CACEpC,KAAK,WACLqC,MAAOA,EACPC,SAAU,kBAAMW,EAAYZ,IAC5BG,QAAS1C,IAAauC,EACtBrD,IAAKqD,GAEJM,QAMRU,GAASA,EAAMN,KACdO,EACE,gBAAC,IAAD,CAAM3E,WAAW,OAAO6E,GAAG,OAA3B,yBAEA,gCACE,gBAAC,IAAD,CACEC,UAAWJ,EAAMlF,OACjBuF,mBAAoB,EACpBC,qBAAsB,EACtBC,aAAc,gBAAGC,EAAH,EAAGA,SAAH,OAAkBb,EAAQa,MAE1C,gBAAC,IAAD,CAAe7D,KAASA,EAAL,iBACjB,gBAACC,EAAD,CACE1D,KAAM8G,EAAMN,GACZ7C,UAAWA,EACXL,UAAWA,EACXG,KAAMA,EACNF,SAAUA,SAuB1B,IAboB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACrB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAM5B,GAAI0F,EAAAA,GAAYC,GAAG,KAAzB,UAGA,gBAAC,IAAD,CAAa/D,KAAMA,GACjB,gBAAC4C,EAAD,U,8EChSR,IArBuB,WACrB,OAAkC/F,EAAAA,EAAAA,WAAS,kBAAM,IAAImH,MAAOC,iBAArDpE,EAAP,KAAkBqE,EAAlB,KACMpB,GAAc7F,EAAAA,EAAAA,UAAQ,kBAC1B,gBAAC,IAAD,CAAMmB,GAAG,QAAQoF,GAAG,MAAMtB,WAAW,UACnC,gBAAC,IAAD,CAAMiC,GAAG,SAAT,QACA,gBAAC,IAAD,CAAKnG,MAAM,QACT,yBACEQ,MAAO,CAAE4F,WAAY,GACrBvD,KAAK,SACLwB,MAAOxC,EACPyC,SAAU,SAAA+B,GAAC,OAAIH,GAAcG,EAAEC,OAAOjC,cAI3C,CAACxC,IACJ,MAAO,CACLA,UAAAA,EACAiD,YAAAA,K,0EChBJ,WAAeyB,EAAAA,EAAAA,IAFE,SAAAC,GAAK,OAAI,gBAAC,IAAD,eAAMxE,KAAK,QAAWwE,Q,qBCJhD,IAAIC,EAAkB,EAAQ,MAC1BC,EAAa,EAAQ,MACrBC,EAAe,EAAQ,MAwC3BC,EAAOC,QAVP,SAAmBC,EAAQC,GACzB,IAAIC,EAAS,GAMb,OALAD,EAAWJ,EAAaI,EAAU,GAElCL,EAAWI,GAAQ,SAASzC,EAAOrD,EAAK8F,GACtCL,EAAgBO,EAAQhG,EAAK+F,EAAS1C,EAAOrD,EAAK8F,OAE7CE","sources":["webpack://styled-gatsby-starter/./src/containers/TechRoadmap.js","webpack://styled-gatsby-starter/./src/hooks/useYearControl.js","webpack://styled-gatsby-starter/./src/pages/dram/tech.js","webpack://styled-gatsby-starter/./node_modules/lodash/mapValues.js"],"sourcesContent":["import ReactDOM from 'react-dom'\r\nimport React, { createRef, useCallback, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Link as GatsbyLink } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport range from 'lodash/range'\r\nimport mapValues from 'lodash/mapValues'\r\nimport Measure from 'react-measure'\r\n\r\nimport SheetLoader from './SheetLoader'\r\nimport Container from 'components/Container'\r\nimport useTableHeader from 'hooks/useTableHeader'\r\nimport useYearControl from 'hooks/useYearControl'\r\nimport Text from 'components/Text'\r\nimport Box from 'components/Box'\r\nimport Link from 'components/Link'\r\nimport PageSimulator from './PageSimulator'\r\nimport DramTimeline from './DramTimeline'\r\nimport parseDate from 'utils/parseDate'\r\nimport Pagination from 'components/Pagination'\r\nimport Flex from 'components/Flex'\r\nimport NoteBox from './NoteBox'\r\nimport PageTitle from './PageTitle'\r\n\r\nconst colors = {\r\n  dram: ['#72afc7', '#234b68'],\r\n  flash: ['#00af9c', '#0b6660'],\r\n}\r\n\r\nconst typeColor = {\r\n  NOR: colors.flash[0],\r\n  NAND: colors.flash[1],\r\n}\r\n\r\nconst StyledTable = styled.table`\r\nth, td {\r\n  border: 3px solid #fff;\r\n  line-height: 2.5;\r\n}\r\n`\r\n\r\nconst borderRightWidth = 12\r\nconst barWidth = 50\r\n\r\nconst FabRow = ({ fab, data, years, color, timelineRef, scale, boundBox }) => {\r\n  const [timelinePoses, setTimelinePoses] = useState([])\r\n  const lineRefs = useMemo(() => data.map(() => [\r\n    createRef(),\r\n    createRef(),\r\n  ]), [data])\r\n\r\n  useEffect(() => {\r\n    setTimelinePoses(lineRefs.map(([start, end]) => {\r\n      const startPos = start.current?.getBoundingClientRect()\r\n      const endPos = end.current?.getBoundingClientRect()\r\n      if (!endPos) return {}\r\n      const height = endPos.bottom - startPos.top\r\n      return mapValues({\r\n        left: startPos.left - boundBox.left,\r\n        width: endPos.right - startPos.left,\r\n        top: startPos.top + height / 2 / 2 - boundBox.top,\r\n        height: height / 2,\r\n      }, v => v / scale)\r\n    }))\r\n  }, [lineRefs, boundBox, years.length])\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <Box\r\n          as=\"td\"\r\n          whiteSpace=\"pre-wrap\"\r\n          bg=\"#cacaca\"\r\n          textAlign=\"center\"\r\n          style={{ borderRightWidth }}\r\n          color=\"#c63b38\"\r\n          fontSize=\"27.5px\"\r\n          fontWeight=\"bold\"\r\n        >{fab}</Box>\r\n        {range(years.length * (years.length > 3 ? 2 : 4)).map((_, q, { length }) => {\r\n          const isLast = q === length - 1\r\n          return (\r\n            <td\r\n              key={q}\r\n              style={{ background: 'linear-gradient(0deg, rgba(227,227,227,0.85), rgba(238,238,238,0.3))' }}\r\n            >\r\n              {data.map((row, i) => {\r\n                let ref\r\n                if (q === 0) ref = lineRefs[i][0]\r\n                if (isLast) ref = lineRefs[i][1]\r\n                return <Box key={i} height={barWidth * 2} mt={i === 0 && (barWidth / 2)} mb={i === data.length - 1 && (barWidth / 2)} ref={ref} />\r\n              })}\r\n            </td>\r\n          )\r\n        })}\r\n      </tr>\r\n      {timelineRef?.current && ReactDOM.createPortal((\r\n        <>\r\n          {data.map((d, i) => (\r\n            <Box key={i} position=\"absolute\" style={timelinePoses[i]}>\r\n              <DramTimeline\r\n                data={d.timeline}\r\n                colors={[d.color || color]}\r\n                startQuarter={1}\r\n                startYear={years[0]}\r\n                yearSpan={years.length}\r\n                thickness={barWidth}\r\n              >\r\n                {d.name}\r\n              </DramTimeline>\r\n              {/* <Box\r\n                textAlign=\"right\"\r\n                fontSize=\"27.5px\"\r\n                color=\"white\"\r\n                position=\"absolute\"\r\n                top=\"50%\"\r\n                right=\"1.5em\"\r\n                transform=\"translateY(-50%)\"\r\n                fontWeight=\"bold\"\r\n                whiteSpace=\"nowrap\"\r\n              >\r\n                {d.name}\r\n              </Box> */}\r\n            </Box>\r\n          ))}\r\n        </>\r\n      ), timelineRef.current)}\r\n    </>\r\n  )\r\n}\r\n\r\nconst TechTable = ({ data, headerRow, startYear, name, scale, yearSpan = 3 }) => {\r\n  const [boundBox, setBoundBox] = useState({})\r\n  const years = useMemo(() => range(yearSpan), [yearSpan])\r\n  const timelineParser = useCallback((d) => {\r\n    const tech = headerRow.find(h => /Technology/i.test(h.Header))?.accessor(d) ?? ''\r\n    const density = headerRow.find(h => /density/i.test(h.Header))?.accessor(d) ?? ''\r\n    const start = headerRow.find(h => /Start/i.test(h.Header))?.accessor(d) ?? ''\r\n    const end = headerRow.find(h => /End/i.test(h.Header))?.accessor(d) ?? ''\r\n    const type = name === 'flash' ? headerRow.find(h => /Type/i.test(h.Header))?.accessor(d) ?? '' : ''\r\n    return {\r\n      name: `${type} ${tech} ${density}`,\r\n      timeline: [[parseDate(start), parseDate(end, 1)]],\r\n      color: typeColor[type],\r\n    }\r\n  }, [headerRow, name])\r\n  const groupByFab = useMemo(() => {\r\n    const fabAccesor = headerRow.find(h => /fab/i.test(h.Header))?.accessor\r\n    if (!fabAccesor) return []\r\n    return data.reduce((all, row) => {\r\n      const fab = fabAccesor(row)\r\n      let l = all.length\r\n      if (fab) {\r\n        l = all.push({ fab, data: [] })\r\n      }\r\n      all[l - 1]?.data.push(timelineParser(row))\r\n      return all\r\n    }, [])\r\n  }, [data, headerRow, timelineParser])\r\n  const quarters = useMemo(() => range(yearSpan > 3 ? 2 : 4).map(q => `${yearSpan > 3 ? 'H' : 'Q'}${q + 1}`), [yearSpan])\r\n\r\n  const timelineRefs = useMemo(() => groupByFab.map(() => createRef()), [groupByFab])\r\n  return (\r\n    <Box>\r\n      <PageTitle>\r\n        {data[0]?.[0]}\r\n      </PageTitle>\r\n      <Measure\r\n        bounds\r\n        onResize={contentRect => {\r\n          setBoundBox(contentRect.bounds)\r\n        }}\r\n      >\r\n        {({ measureRef }) => (\r\n          <Box position=\"absolute\" left=\"170px\" top=\"162px\" right=\"183px\" ref={measureRef}>\r\n            <StyledTable>\r\n              <thead>\r\n                <tr>\r\n                  <Box as=\"th\" fontWeight=\"900\" bg=\"#efefef\" rowSpan={2} width=\"222px\" style={{ borderRightWidth }} />\r\n                  {years.map(y => (\r\n                    <Box\r\n                      key={y}\r\n                      color=\"white\"\r\n                      as=\"th\"\r\n                      bg=\"#c63b38\"\r\n                      colSpan={yearSpan > 3 ? 2 : 4}\r\n                      fontSize=\"26px\"\r\n                      fontWeight=\"700\"\r\n                    >{startYear + y}</Box>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  {years.reduce((all, y) => all.concat(quarters.map(q => (\r\n                    <Box\r\n                      as=\"th\"\r\n                      bg=\"#cacaca\"\r\n                      key={q + y}\r\n                      width=\"112px\"\r\n                      fontSize=\"24px\"\r\n                    >{q}</Box>\r\n                  ))), [])}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupByFab.map(({ fab, data: rowData }, f) => (\r\n                  <FabRow\r\n                    key={fab}\r\n                    data={rowData}\r\n                    fab={fab}\r\n                    years={years.map(y => y + startYear)}\r\n                    timelineRef={timelineRefs[f]}\r\n                    color={colors[name][f]}\r\n                    scale={scale}\r\n                    boundBox={boundBox}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </StyledTable>\r\n            <Flex.HStack mt=\"1em\" justifyContent=\"flex-end\" alignItems=\"center\" spacing=\"1.25em\">\r\n              <NoteBox bg=\"#9fa0a0\">NOTE</NoteBox>\r\n              <Box>Roapmaps are subject to change.</Box>\r\n            </Flex.HStack>\r\n            {groupByFab.map(({ fab }, f) => <Box.FullAbsolute key={fab} ref={timelineRefs[f]} />)}\r\n          </Box>\r\n        )}\r\n      </Measure>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst RadioInput = ({ name, value, onChange, children, checked }) => (\r\n  <Box as=\"label\">\r\n    <input type=\"radio\" name={name} value={value} onChange={onChange} checked={checked} />\r\n    <Box as=\"span\" ml=\"0.5em\">{children}</Box>\r\n  </Box>\r\n)\r\n\r\nconst yearSpanValues = [\r\n  { label: '3 Years', value: 3 },\r\n  { label: '7 Years', value: 7 },\r\n]\r\n\r\nconst SheetData = ({ data, name }) => {\r\n  const { startYear, yearControl } = useYearControl()\r\n  // const [selectedRow, setSelectedRow] = useState({})\r\n  const [page, setPage] = useState(0)\r\n  const [yearSpan, setYearSpan] = useState(3)\r\n\r\n  const headerRow = useTableHeader(data, 0)\r\n  const tableData = useMemo(() => data ? data.slice(1) : [], [data])\r\n  const pages = useMemo(() => {\r\n    return tableData.reduce((all, row) => {\r\n      let i = all.length - 1\r\n      if (row[0]) {\r\n        i = all.push([]) - 1\r\n      }\r\n      all[i]?.push(row)\r\n      return all\r\n    }, [])\r\n  }, [tableData])\r\n  const notFab = useMemo(() => headerRow.every((h => !/fab/i.test(h.Header))), [headerRow])\r\n\r\n  return (\r\n    <>\r\n      <Flex.HStack alignItems=\"center\">\r\n        {yearControl}\r\n        <Flex.HStack spacing=\"1.25em\">\r\n          {yearSpanValues.map(({ value, label }) => (\r\n            <RadioInput\r\n              name=\"yearSpan\"\r\n              value={value}\r\n              onChange={() => setYearSpan(value)}\r\n              checked={yearSpan === value}\r\n              key={value}\r\n            >\r\n              {label}\r\n            </RadioInput>\r\n          ))}\r\n\r\n        </Flex.HStack>\r\n      </Flex.HStack>\r\n      {pages && pages[page] && (\r\n        notFab ? (\r\n          <Text fontWeight=\"bold\" my=\"1em\">Invalid Sheet Format.</Text>\r\n        ) : (\r\n          <>\r\n            <Pagination\r\n              pageCount={pages.length}\r\n              pageRangeDisplayed={5}\r\n              marginPagesDisplayed={2}\r\n              onPageChange={({ selected }) => setPage(selected)}\r\n            />\r\n            <PageSimulator name={`${name}-tech-roadmap`}>\r\n              <TechTable\r\n                data={pages[page]}\r\n                headerRow={headerRow}\r\n                startYear={startYear}\r\n                name={name}\r\n                yearSpan={yearSpan}\r\n              />\r\n            </PageSimulator>\r\n          </>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst TechRoadmap = ({ name }) => {\r\n  return (\r\n    <Container>\r\n      <Link as={GatsbyLink} to=\"/\">\r\n        {`< Home`}\r\n      </Link>\r\n      <SheetLoader name={name}>\r\n        <SheetData />\r\n      </SheetLoader>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TechRoadmap\r\n","import React, { useMemo, useState } from 'react'\r\nimport Flex from 'components/Flex'\r\nimport Text from 'components/Text'\r\nimport Box from 'components/Box'\r\n\r\nconst useYearControl = () => {\r\n  const [startYear, setStartYear] = useState(() => new Date().getFullYear())\r\n  const yearControl = useMemo(() => (\r\n    <Flex as=\"label\" my=\"1em\" alignItems=\"center\">\r\n      <Text mr=\"0.5em\">起始年分</Text>\r\n      <Box width=\"12em\">\r\n        <input\r\n          style={{ lineHeight: 2 }}\r\n          type=\"number\"\r\n          value={startYear}\r\n          onChange={e => setStartYear(+e.target.value)}\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  ), [startYear])\r\n  return {\r\n    startYear,\r\n    yearControl,\r\n  }\r\n}\r\n\r\nexport default useYearControl\r\n","import React from 'react'\r\nimport withAuthChecker from 'containers/withAuthChecker'\r\nimport Page from 'containers/TechRoadmap'\r\n\r\nconst TechPage = props => <Page name=\"dram\" {...props} />\r\n\r\nexport default withAuthChecker(TechPage)\r\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"names":["colors","dram","flash","typeColor","NOR","NAND","StyledTable","styled","FabRow","fab","data","years","color","timelineRef","scale","boundBox","useState","timelinePoses","setTimelinePoses","lineRefs","useMemo","map","createRef","useEffect","start","end","startPos","current","getBoundingClientRect","endPos","height","bottom","top","mapValues","left","width","right","v","length","as","whiteSpace","bg","textAlign","style","borderRightWidth","fontSize","fontWeight","range","_","q","isLast","key","background","row","i","ref","barWidth","mt","mb","ReactDOM","d","position","timeline","startQuarter","startYear","yearSpan","thickness","name","TechTable","headerRow","setBoundBox","timelineParser","useCallback","tech","find","h","test","Header","accessor","density","type","parseDate","groupByFab","fabAccesor","reduce","all","l","push","quarters","timelineRefs","bounds","onResize","contentRect","measureRef","rowSpan","y","colSpan","concat","f","rowData","justifyContent","alignItems","spacing","RadioInput","value","onChange","children","checked","ml","yearSpanValues","label","SheetData","useYearControl","yearControl","page","setPage","setYearSpan","useTableHeader","tableData","slice","pages","notFab","every","my","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","GatsbyLink","to","Date","getFullYear","setStartYear","mr","lineHeight","e","target","withAuthChecker","props","baseAssignValue","baseForOwn","baseIteratee","module","exports","object","iteratee","result"],"sourceRoot":""}