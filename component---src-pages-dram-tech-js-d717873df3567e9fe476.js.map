{"version":3,"file":"component---src-pages-dram-tech-js-d717873df3567e9fe476.js","mappings":"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","sources":["webpack://styled-gatsby-starter/./src/hooks/useQuarterControl.js","webpack://styled-gatsby-starter/./src/containers/TechRoadmap.js","webpack://styled-gatsby-starter/./src/hooks/useYearControl.js","webpack://styled-gatsby-starter/./src/pages/dram/tech.js","webpack://styled-gatsby-starter/./node_modules/lodash/mapValues.js"],"sourcesContent":["import React, { useMemo, useState } from 'react'\r\nimport { getQuarter } from 'date-fns'\r\n\r\nimport Flex from 'components/Flex'\r\nimport Text from 'components/Text'\r\nimport Box from 'components/Box'\r\n\r\nconst useQuarterControl = () => {\r\n  const [startQuarter, setStartQurarter] = useState(() => getQuarter(new Date()))\r\n  const quarterControl = useMemo(() => (\r\n    <Flex as=\"label\" my=\"1em\" alignItems=\"center\">\r\n      <Text mr=\"0.5em\">起始季度</Text>\r\n      <Box width=\"6em\">\r\n        <Box\r\n          as=\"input\"\r\n          maxWidth=\"100%\"\r\n          type=\"number\"\r\n          lineHeight=\"2\"\r\n          value={startQuarter}\r\n          max={4}\r\n          min={1}\r\n          onChange={e => setStartQurarter(+e.target.value)}\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  ), [startQuarter])\r\n  return {\r\n    startQuarter,\r\n    quarterControl,\r\n  }\r\n}\r\n\r\nexport default useQuarterControl\r\n","import ReactDOM from 'react-dom'\r\nimport React, { createRef, useCallback, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Link as GatsbyLink } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport range from 'lodash/range'\r\nimport mapValues from 'lodash/mapValues'\r\nimport Measure from 'react-measure'\r\n\r\nimport SheetLoader from './SheetLoader'\r\nimport Container from 'components/Container'\r\nimport useTableHeader from 'hooks/useTableHeader'\r\nimport useYearControl from 'hooks/useYearControl'\r\nimport useQuarterControl from 'hooks/useQuarterControl'\r\nimport Text from 'components/Text'\r\nimport Box from 'components/Box'\r\nimport Link from 'components/Link'\r\nimport PageSimulator from './PageSimulator'\r\nimport DramTimeline from './DramTimeline'\r\nimport parseDate from 'utils/parseDate'\r\nimport Pagination from 'components/Pagination'\r\nimport Flex from 'components/Flex'\r\nimport NoteBox from './NoteBox'\r\nimport PageTitle from './PageTitle'\r\n\r\nconst colors = {\r\n  dram: ['#72afc7', '#234b68'],\r\n  flash: ['#00af9c', '#0b6660'],\r\n}\r\n\r\nconst typeColor = {\r\n  NOR: colors.flash[0],\r\n  NAND: colors.flash[1],\r\n}\r\n\r\nconst StyledTable = styled.table`\r\nbackground: linear-gradient(0deg, rgba(227,227,227,0.85), rgba(238,238,238,0.3));\r\nth, td {\r\n  border: 3px solid #fff;\r\n  line-height: 2.5;\r\n}\r\n`\r\n\r\nconst borderRightWidth = 12\r\nconst barWidth = 50\r\n\r\nconst FabRow = ({ fab, data, startYear, yearSpan, color, timelineRef, scale, boundBox, startQuarter }) => {\r\n  const [timelinePoses, setTimelinePoses] = useState([])\r\n  const lineRefs = useMemo(() => data.map(() => [\r\n    createRef(),\r\n    createRef(),\r\n  ]), [data])\r\n\r\n  useEffect(() => {\r\n    setTimelinePoses(lineRefs.map(([start, end]) => {\r\n      const startPos = start.current?.getBoundingClientRect()\r\n      const endPos = end.current?.getBoundingClientRect()\r\n      if (!endPos) return {}\r\n      const height = endPos.bottom - startPos.top\r\n      return mapValues({\r\n        left: startPos.left - boundBox.left,\r\n        width: endPos.right - startPos.left,\r\n        top: startPos.top + height / 2 / 2 - boundBox.top,\r\n        height: height / 2,\r\n      }, v => v / scale)\r\n    }))\r\n  }, [lineRefs, boundBox, yearSpan])\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <Box\r\n          as=\"td\"\r\n          whiteSpace=\"pre-wrap\"\r\n          bg=\"#cacaca\"\r\n          textAlign=\"center\"\r\n          style={{ borderRightWidth }}\r\n          color=\"#c63b38\"\r\n          fontSize=\"27.5px\"\r\n          fontWeight=\"bold\"\r\n        >{fab}</Box>\r\n        {range(yearSpan * (yearSpan > 3 ? 2 : 4)).map((_, q, { length }) => {\r\n          const isLast = q === length - 1\r\n          return (\r\n            <td\r\n              key={q}\r\n            >\r\n              {data.map((row, i) => {\r\n                let ref\r\n                if (q === 0) ref = lineRefs[i][0]\r\n                if (isLast) ref = lineRefs[i][1]\r\n                return <Box key={i} height={barWidth * 2} mt={i === 0 && (barWidth / 2)} mb={i === data.length - 1 && (barWidth / 2)} ref={ref} />\r\n              })}\r\n            </td>\r\n          )\r\n        })}\r\n      </tr>\r\n      {timelineRef?.current && ReactDOM.createPortal((\r\n        <>\r\n          {data.map((d, i) => (\r\n            <Box key={i} position=\"absolute\" style={timelinePoses[i]}>\r\n              <DramTimeline\r\n                data={d.timeline}\r\n                colors={[d.color || color]}\r\n                startQuarter={startQuarter}\r\n                startYear={startYear}\r\n                yearSpan={yearSpan}\r\n                thickness={barWidth}\r\n              >\r\n                {d.name}\r\n              </DramTimeline>\r\n              {/* <Box\r\n                textAlign=\"right\"\r\n                fontSize=\"27.5px\"\r\n                color=\"white\"\r\n                position=\"absolute\"\r\n                top=\"50%\"\r\n                right=\"1.5em\"\r\n                transform=\"translateY(-50%)\"\r\n                fontWeight=\"bold\"\r\n                whiteSpace=\"nowrap\"\r\n              >\r\n                {d.name}\r\n              </Box> */}\r\n            </Box>\r\n          ))}\r\n        </>\r\n      ), timelineRef.current)}\r\n    </>\r\n  )\r\n}\r\n\r\nconst TechTable = ({ data, headerRow, startYear, startQuarter, name, scale, yearSpan = 3 }) => {\r\n  const [boundBox, setBoundBox] = useState({})\r\n  const years = useMemo(() => {\r\n    const isPerfect = startQuarter === 1 || yearSpan > 3\r\n    const makeQuarter = q => `${yearSpan > 3 ? 'H' : 'Q'}${q + 1}`\r\n    return range(yearSpan + (isPerfect ? 0 : 1)).map(y => {\r\n      if (isPerfect) return range(yearSpan > 3 ? 2 : 4).map(makeQuarter)\r\n      if (y === 0) return range(startQuarter - 1, 4).map(makeQuarter)\r\n      if (y === yearSpan) return range(startQuarter - 1).map(makeQuarter)\r\n      return range(4).map(makeQuarter)\r\n    })\r\n  }, [yearSpan, startQuarter])\r\n  const timelineParser = useCallback((d) => {\r\n    const tech = headerRow.find(h => /Technology/i.test(h.Header))?.accessor(d) ?? ''\r\n    const density = headerRow.find(h => /density/i.test(h.Header))?.accessor(d) ?? ''\r\n    const start = headerRow.find(h => /Start/i.test(h.Header))?.accessor(d) ?? ''\r\n    const end = headerRow.find(h => /End/i.test(h.Header))?.accessor(d) ?? ''\r\n    const type = name === 'flash' ? headerRow.find(h => /Type/i.test(h.Header))?.accessor(d) ?? '' : ''\r\n    return {\r\n      name: `${type} ${tech} ${density}`,\r\n      timeline: [[parseDate(start), parseDate(end, 1)]],\r\n      color: typeColor[type],\r\n    }\r\n  }, [headerRow, name])\r\n  const groupByFab = useMemo(() => {\r\n    const fabAccesor = headerRow.find(h => /fab/i.test(h.Header))?.accessor\r\n    if (!fabAccesor) return []\r\n    return data.reduce((all, row) => {\r\n      const fab = fabAccesor(row)\r\n      let l = all.length\r\n      if (fab) {\r\n        l = all.push({ fab, data: [] })\r\n      }\r\n      all[l - 1]?.data.push(timelineParser(row))\r\n      return all\r\n    }, [])\r\n  }, [data, headerRow, timelineParser])\r\n  const timelineRefs = useMemo(() => groupByFab.map(() => createRef()), [groupByFab])\r\n  return (\r\n    <Box>\r\n      <PageTitle>\r\n        {data[0]?.[0]}\r\n      </PageTitle>\r\n      <Measure\r\n        bounds\r\n        onResize={contentRect => {\r\n          setBoundBox(contentRect.bounds)\r\n        }}\r\n      >\r\n        {({ measureRef }) => (\r\n          <Box position=\"absolute\" left=\"170px\" top=\"162px\" right=\"183px\" ref={measureRef}>\r\n            <StyledTable>\r\n              <thead>\r\n                <tr>\r\n                  <Box as=\"th\" fontWeight=\"900\" bg=\"#efefef\" rowSpan={2} width=\"222px\" style={{ borderRightWidth }} />\r\n                  {years.map((span, y) => (\r\n                    <Box\r\n                      key={y}\r\n                      color=\"white\"\r\n                      as=\"th\"\r\n                      bg=\"#c63b38\"\r\n                      colSpan={span.length}\r\n                      fontSize=\"26px\"\r\n                      fontWeight=\"700\"\r\n                    >{startYear + y}</Box>\r\n                  ))}\r\n                </tr>\r\n                <tr>\r\n                  {years.reduce((all, quarters, y) => all.concat(quarters.map(q => (\r\n                    <Box\r\n                      as=\"th\"\r\n                      bg=\"#cacaca\"\r\n                      key={q + y}\r\n                      width=\"112px\"\r\n                      fontSize=\"24px\"\r\n                    >{q}</Box>\r\n                  ))), [])}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupByFab.map(({ fab, data: rowData }, f) => (\r\n                  <FabRow\r\n                    key={fab}\r\n                    data={rowData}\r\n                    fab={fab}\r\n                    startYear={startYear}\r\n                    yearSpan={yearSpan}\r\n                    startQuarter={yearSpan > 3 ? 1 : startQuarter}\r\n                    timelineRef={timelineRefs[f]}\r\n                    color={colors[name][f]}\r\n                    scale={scale}\r\n                    boundBox={boundBox}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </StyledTable>\r\n            <Flex.HStack mt=\"1em\" justifyContent=\"flex-end\" alignItems=\"center\" spacing=\"1.25em\">\r\n              <NoteBox bg=\"#9fa0a0\">NOTE</NoteBox>\r\n              <Box>Roapmaps are subject to change.</Box>\r\n            </Flex.HStack>\r\n            {groupByFab.map(({ fab }, f) => <Box.FullAbsolute key={fab} ref={timelineRefs[f]} />)}\r\n          </Box>\r\n        )}\r\n      </Measure>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst RadioInput = ({ name, value, onChange, children, checked }) => (\r\n  <Box as=\"label\">\r\n    <input type=\"radio\" name={name} value={value} onChange={onChange} checked={checked} />\r\n    <Box as=\"span\" ml=\"0.5em\">{children}</Box>\r\n  </Box>\r\n)\r\n\r\nconst yearSpanValues = [\r\n  { label: '3 Years', value: 3 },\r\n  { label: '7 Years', value: 7 },\r\n]\r\n\r\nconst SheetData = ({ data, name }) => {\r\n  const { startYear, yearControl } = useYearControl()\r\n  const { startQuarter, quarterControl } = useQuarterControl()\r\n  // const [selectedRow, setSelectedRow] = useState({})\r\n  const [page, setPage] = useState(0)\r\n  const [yearSpan, setYearSpan] = useState(3)\r\n\r\n  const headerRow = useTableHeader(data, 0)\r\n  const tableData = useMemo(() => data ? data.slice(1) : [], [data])\r\n  const pages = useMemo(() => {\r\n    return tableData.reduce((all, row) => {\r\n      let i = all.length - 1\r\n      if (row[0]) {\r\n        i = all.push([]) - 1\r\n      }\r\n      all[i]?.push(row)\r\n      return all\r\n    }, [])\r\n  }, [tableData])\r\n  const notFab = useMemo(() => headerRow.every((h => !/fab/i.test(h.Header))), [headerRow])\r\n\r\n  return (\r\n    <>\r\n      <Flex.HStack alignItems=\"center\">\r\n        {yearControl}\r\n        {quarterControl}\r\n        <Flex.HStack spacing=\"1.5em\">\r\n          {yearSpanValues.map(({ value, label }) => (\r\n            <RadioInput\r\n              name=\"yearSpan\"\r\n              value={value}\r\n              onChange={() => setYearSpan(value)}\r\n              checked={yearSpan === value}\r\n              key={value}\r\n            >\r\n              {label}\r\n            </RadioInput>\r\n          ))}\r\n\r\n        </Flex.HStack>\r\n      </Flex.HStack>\r\n      {pages && pages[page] && (\r\n        notFab ? (\r\n          <Text fontWeight=\"bold\" my=\"1em\">Invalid Sheet Format.</Text>\r\n        ) : (\r\n          <>\r\n            <Pagination\r\n              pageCount={pages.length}\r\n              pageRangeDisplayed={5}\r\n              marginPagesDisplayed={2}\r\n              onPageChange={({ selected }) => setPage(selected)}\r\n            />\r\n            <PageSimulator name={`${name}-tech-roadmap`} key={yearSpan}>\r\n              <TechTable\r\n                data={pages[page]}\r\n                headerRow={headerRow}\r\n                startYear={startYear}\r\n                startQuarter={startQuarter}\r\n                name={name}\r\n                yearSpan={yearSpan}\r\n              />\r\n            </PageSimulator>\r\n          </>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst TechRoadmap = ({ name }) => {\r\n  return (\r\n    <Container>\r\n      <Link as={GatsbyLink} to={`/${name}`}>\r\n        {`< Home`}\r\n      </Link>\r\n      <SheetLoader name={name}>\r\n        <SheetData />\r\n      </SheetLoader>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TechRoadmap\r\n","import React, { useMemo, useState } from 'react'\r\nimport Flex from 'components/Flex'\r\nimport Text from 'components/Text'\r\nimport Box from 'components/Box'\r\n\r\nconst useYearControl = () => {\r\n  const [startYear, setStartYear] = useState(() => new Date().getFullYear())\r\n  const yearControl = useMemo(() => (\r\n    <Flex as=\"label\" my=\"1em\" alignItems=\"center\">\r\n      <Text mr=\"0.5em\">起始年分</Text>\r\n      <Box width=\"10em\">\r\n        <Box\r\n          as=\"input\"\r\n          maxWidth=\"100%\"\r\n          type=\"number\"\r\n          lineHeight=\"2\"\r\n          value={startYear}\r\n          onChange={e => setStartYear(+e.target.value)}\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  ), [startYear])\r\n  return {\r\n    startYear,\r\n    yearControl,\r\n  }\r\n}\r\n\r\nexport default useYearControl\r\n","import React from 'react'\r\nimport withAuthChecker from 'containers/withAuthChecker'\r\nimport Page from 'containers/TechRoadmap'\r\n\r\nconst TechPage = props => <Page name=\"dram\" {...props} />\r\n\r\nexport default withAuthChecker(TechPage)\r\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"names":["useState","getQuarter","Date","startQuarter","setStartQurarter","quarterControl","useMemo","Flex","as","my","alignItems","Text","mr","Box","width","maxWidth","type","lineHeight","value","max","min","onChange","e","target","colors","dram","flash","typeColor","NOR","NAND","StyledTable","styled","FabRow","fab","data","startYear","yearSpan","color","timelineRef","scale","boundBox","timelinePoses","setTimelinePoses","lineRefs","map","createRef","useEffect","start","end","startPos","current","getBoundingClientRect","endPos","height","bottom","top","mapValues","left","right","v","whiteSpace","bg","textAlign","style","borderRightWidth","fontSize","fontWeight","range","_","q","length","isLast","key","row","i","ref","barWidth","mt","mb","ReactDOM","d","position","DramTimeline","timeline","thickness","name","TechTable","headerRow","setBoundBox","years","isPerfect","makeQuarter","y","timelineParser","useCallback","tech","find","h","test","Header","accessor","density","parseDate","groupByFab","fabAccesor","reduce","all","l","push","timelineRefs","PageTitle","bounds","onResize","contentRect","measureRef","rowSpan","span","colSpan","quarters","concat","f","rowData","justifyContent","spacing","NoteBox","RadioInput","children","checked","ml","yearSpanValues","label","SheetData","useYearControl","yearControl","useQuarterControl","page","setPage","setYearSpan","useTableHeader","tableData","slice","pages","notFab","every","Pagination","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","PageSimulator","Container","Link","GatsbyLink","to","SheetLoader","getFullYear","setStartYear","withAuthChecker","props","baseAssignValue","baseForOwn","baseIteratee","module","exports","object","iteratee","result"],"sourceRoot":""}